# The format of this config file is 'key = value'.
# The key has the format 'model.scenario.key'. Value is mostly int64_t.
# Model maybe '*' as wildcard. In that case the value applies to all models.
# All times are in milli seconds

# Set performance_sample_count for each model.
# User can optionally set this to higher values in user.conf.
llama2-70b.*.performance_sample_count_override = 24576

# Set seeds. The seeds will be distributed two weeks before the submission.
*.*.qsl_rng_seed = 3066443479025735752
*.*.sample_index_rng_seed = 10688027786191513374
*.*.schedule_rng_seed = 14962580496156340209
# Set seeds for TEST_05. The seeds will be distributed two weeks before the submission.
*.*.test05_qsl_rng_seed = 16799458546791641818
*.*.test05_sample_index_rng_seed = 5453809927556429288
*.*.test05_schedule_rng_seed = 5435552105434836064


*.SingleStream.target_latency_percentile = 90
*.SingleStream.min_duration = 600000

*.MultiStream.target_latency_percentile = 99
*.MultiStream.samples_per_query = 8
*.MultiStream.min_duration = 600000
*.MultiStream.min_query_count = 662


# LLM benchmarks have non-uniform inputs and outputs, and use equal issue mode for all latency scenario
llama2-70b.*.sample_concatenate_permutation = 1

*.Server.target_latency = 10
*.Server.target_latency_percentile = 99
*.Server.target_duration = 0
*.Server.min_duration = 600000
# Llama2-70b benchmarks measures token latencies
llama2-70b.*.use_token_latencies = 1

*.Offline.target_latency_percentile = 90
*.Offline.min_duration = 600000

# In Offline scenario, we always have one query. But LoadGen maps this to
# min_sample_count internally in Offline scenario. If the dataset size is larger 
# than 24576 we limit the min_query_count to 24576 and otherwise we use 
# the dataset size as the limit

llama2-70b.Offline.min_query_count = 24576

# These fields should be defined and overridden by user.conf.
*.SingleStream.target_latency = 10
*.MultiStream.target_latency = 80
*.Server.target_qps = 1.0
*.Offline.target_qps = 1.0
